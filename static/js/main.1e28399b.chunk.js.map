{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/auth-reducer.ts","reportWebVitals.ts","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","redux/app-reducer.ts","redux/redux-store.ts","hoc/withSuspense.tsx","App.tsx","index.tsx","components/common/Preloader/Preloader.tsx","components/Header/Header.module.css","components/common/CustomButton/CustomButton.module.css","components/common/CustomButton/CustomButton.tsx","redux/profile-reducer.ts","utils/objec-helpers.ts","redux/users-reducer.ts","api/api.ts","redux/dialog-reducer.ts"],"names":["module","exports","SET_AUTH_USER_DATA","SET_FETCHING","SET_USER_AUTHORIZATION","initialState","data","isFetching","isAuth","setAuthUserData","type","setFetching","getAuthUserData","dispatch","a","authAPI","me","response","resultCode","login","email","password","rememberMe","captcha","stopSubmit","_error","messages","logout","authReducer","state","action","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","active","activeClassName","activeLink","News","Header","props","header","src","alt","loginBlock","CustomButton","purple","onClick","style","textDecoration","HeaderContainer","this","React","Component","connect","auth","INITIALIZED_SUCCESS","initialized","appReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogPage","dialogReducer","usersPage","usersReducer","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","withSuspense","Suspense","fallback","Preloader","DialogsContainer","lazy","ProfileContainer","UsersContainer","Login","App","initializeApp","borderRadius","path","render","component","AppContainer","withRouter","promise","Promise","all","SamuraiJSApp","ReactDOM","document","getElementById","width","height","position","top","left","zIndex","restProps","finalClassName","default","ADD_NEW_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","posts","id","text","likesCount","userProfile","status","addPost","postText","setStatus","getUserProfile","userId","usersAPI","getProfile","Number","getStatus","profileAPI","updateStatus","filter","p","postId","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","SET_FOLLOWING_IN_PROGRESS","users","pageSize","totalUsersCount","currentPage","followingInProgress","followSuccess","unfollowSuccess","setUsers","getFriends","setCurrentPage","setFollowingInProgress","requestUsers","page","getUsers","totalCount","followUnfollowFlow","apiMethod","actionCreator","follow","bind","unfollow","followed","instance","axios","create","withCredentials","baseURL","headers","get","delete","post","console","warn","put","ADD_NEW_MESSAGE","addMessageAC","message","dialogs","name"],"mappings":"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","file":"static/js/main.1e28399b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__Nj7EO\",\"item\":\"Navbar_item__3JUD_\"};","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {StoreType} from \"./redux-store\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {batch} from \"react-redux\";\r\n\r\nconst SET_AUTH_USER_DATA = 'SET-AUTH-USER-DATA'\r\nconst SET_FETCHING = 'SET-FETCHING'\r\nconst SET_USER_AUTHORIZATION = 'SET-USER-AUTHORIZATION'\r\n\r\n\r\nexport type UserDataType = {\r\n    id: number\r\n    email: string\r\n    login: string\r\n}\r\nexport type AuthUserDataType = {\r\n    data: UserDataType | null\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\n\r\ntype ActionsTypes = ReturnType<typeof setAuthUserData>\r\n    | ReturnType<typeof setFetching>\r\n    | ReturnType<typeof setUserAuthorization>\r\n\r\ntype StopSubmitType = ReturnType<typeof stopSubmit>\r\n\r\nlet initialState: AuthUserDataType = {\r\n    data: null,\r\n    isFetching: true,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action: ActionsTypes): AuthUserDataType => {\r\n    switch (action.type) {\r\n        case SET_AUTH_USER_DATA:\r\n            return {\r\n                ...state,\r\n                data: action.data,\r\n                isAuth: true\r\n            }\r\n        case SET_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        case SET_USER_AUTHORIZATION:\r\n            return {\r\n                ...state,\r\n                isAuth: action.isAuth\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (data: UserDataType | null) => {\r\n    return {\r\n        type: SET_AUTH_USER_DATA,\r\n        data\r\n    } as const\r\n}\r\nexport const setFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: SET_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport const setUserAuthorization = (isAuth: boolean) => {\r\n    return {\r\n        type: SET_USER_AUTHORIZATION,\r\n        isAuth\r\n    } as const\r\n}\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\r\n    let response = await authAPI.me()\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(response.data.data))\r\n    }\r\n}\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha?: boolean): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha)\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        dispatch(stopSubmit('login', {_error: data.messages}))\r\n    }\r\n}\r\nexport const logout = (): ThunkType => async (dispatch) => {\r\n    let data = await authAPI.logout()\r\n    if (data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null))\r\n    }\r\n    dispatch(setUserAuthorization(false))\r\n}\r\n\r\n\r\nexport type ThunkType = ThunkAction<void, StoreType, unknown, CommonActionType>\r\ntype CommonActionType = ActionsTypes | StopSubmitType\r\n\r\nexport default authReducer","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" >Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" >Messages</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" >Users</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" >News</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/friends\" activeClassName={s.activeLink}><h2>Friends</h2></NavLink>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nfunction News() {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport {UserDataType} from \"../../redux/auth-reducer\";\r\nimport CustomButton from \"../common/CustomButton/CustomButton\";\r\n\r\ntype HeaderPropsType = {\r\n    data: UserDataType | null\r\n    isAuth: boolean\r\n    logout: () => void\r\n}\r\n\r\nfunction Header(props: HeaderPropsType) {\r\n    return (\r\n        <header className={s.header}>\r\n            <img\r\n                src=\"https://static.tildacdn.com/tild3136-3538-4632-b463-653639356631/Dvh-1.gif\"\r\n                alt=\"\"/>\r\n            <div className={s.loginBlock}>\r\n                {props.isAuth\r\n                    ? <div>Hi, {props.data?.login} | <CustomButton purple onClick={props.logout}>Logout</CustomButton></div>\r\n                    : <NavLink style={{textDecoration: \"none\"}} to='/login'>Login</NavLink>}\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {logout, setFetching, UserDataType} from \"../../redux/auth-reducer\";\r\nimport {connect} from 'react-redux';\r\nimport {StoreType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStateToPropsType = {\r\n    data: UserDataType | null\r\n    isFetching: boolean\r\n    isAuth: boolean\r\n}\r\ntype MapDispatchToPropsType = {\r\n    setFetching: (isFetching: boolean) => void\r\n    logout: () => void\r\n}\r\ntype HeaderContainerPropsType = MapStateToPropsType & MapDispatchToPropsType\r\n\r\nclass HeaderContainer extends React.Component<HeaderContainerPropsType> {\r\n\r\n\r\n    render() {\r\n        return <Header data={this.props.data} isAuth={this.props.isAuth} logout={this.props.logout}/>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreType) => {\r\n    return {\r\n        data: state.auth.data,\r\n        isFetching: state.auth.isFetching,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    setFetching,\r\n    logout\r\n})(HeaderContainer);","import {ThunkAction} from \"redux-thunk\";\r\nimport {StoreType} from \"./redux-store\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED-SUCCESS'\r\n\r\ntype ActionsTypes = ReturnType<typeof initializedSuccess>\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => {\r\n  return {\r\n      type: INITIALIZED_SUCCESS\r\n  } as const\r\n}\r\n\r\nexport const initializeApp = (): ThunkType => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())\r\n    Promise.all([promise]).then(()=>{\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport type ThunkType = ThunkAction<void, StoreType, unknown, CommonActionType>\r\ntype CommonActionType = ActionsTypes\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware, {ThunkAction} from 'redux-thunk'\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogReducer from \"./dialog-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogPage: dialogReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport let store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\nexport type StoreType = ReturnType<typeof rootReducer>\r\n\r\n\r\n//@ts-ignore\r\nwindow.store = store","import React, {ComponentType} from 'react';\r\nimport {Preloader} from \"../components/common/Preloader/Preloader\";\r\n\r\nexport function withSuspense<T>(Component: ComponentType<T>) {\r\n    return (props: any) => (\r\n        <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    )\r\n};\r\n\r\n","import React, { Suspense } from 'react';\nimport './App.css'\nimport Navbar from \"./components/Navbar/Navbar\";\nimport News from \"./components/News/News\";\nimport {HashRouter, Route, RouteComponentProps, withRouter} from 'react-router-dom';\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport {connect, Provider} from \"react-redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport {store, StoreType} from \"./redux/redux-store\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst DialogsContainer = React.lazy(()=> import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(()=> import('./components/Profile/ProfileContainer'));\nconst UsersContainer = React.lazy(()=> import('./components/Users/UsersContainer'));\nconst Login = React.lazy(()=> import('./components/Login/Login'));\n\n\ntype MapStateToPropsType = {\n    initialized: boolean\n}\ntype MapDispatchToPropsType = {\n    initializeApp: () => void\n}\n\ntype AppPropsType = MapStateToPropsType & MapDispatchToPropsType\n\nclass App extends React.Component<AppPropsType> {\n    componentDidMount() {\n        this.props.initializeApp()\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n        return (\n            <div style={{borderRadius: '10px'}} className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n\n                    <Route path='/dialogs' render={withSuspense(DialogsContainer)}\n                    />\n                    <Route path='/profile/:userId?'\n                           render={() => <Suspense fallback={<Preloader/>}><ProfileContainer/></Suspense>}\n                    />\n                    <Route path='/news' component={() => <News/>}/>\n                    <Route path='/users' component={withSuspense(UsersContainer)}/>\n                    <Route path='/login' component={withSuspense(Login)}/>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = (state: StoreType): MapStateToPropsType => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = withRouter<RouteComponentProps, any>(connect(mapStateToProps, {initializeApp})(App));\n\nconst SamuraiJSApp = () => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </HashRouter>\n    )\n}\n\nexport default SamuraiJSApp","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport SamuraiJSApp from \"./App\";\n\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'))\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from \"react\";\r\n\r\nexport const Preloader = () => {\r\n  return (\r\n      <div style={{width: \"100px\", height: \"100px\", position:\"absolute\",top: \"50%\", left: \"50%\", zIndex :1}}>\r\n          <img style={{width: '100px'}} src='https://i.gifer.com/XVo6.gif' alt=\"\"/>\r\n      </div>\r\n  )\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1DYAZ\",\"loginBlock\":\"Header_loginBlock__c7CbQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"CustomButton_default__1Ox7Q\",\"purple\":\"CustomButton_purple__1Odhr\"};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\r\nimport s from './CustomButton.module.css'\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype CustomButtonPropsType = DefaultButtonPropsType & {\r\n    purple?: boolean\r\n}\r\nconst CustomButton = ({\r\n                          className,\r\n                          purple,\r\n                          ...restProps\r\n                      }: CustomButtonPropsType) => {\r\n\r\n    const finalClassName = `${purple ? s.purple : s.default} ${className}`\r\n    return (\r\n        <button className={finalClassName} {...restProps}/>\r\n    );\r\n};\r\n\r\nexport default CustomButton;","import {Dispatch} from \"redux\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_NEW_POST = 'ADD-NEW-POST'\r\nconst DELETE_POST = 'DELETE-POST'\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'SET-STATUS'\r\n\r\n\r\nexport type UserProfilePhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type UserProfileContactsType = {\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter: string\r\n    website: string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\nexport type UserProfileType = {\r\n    userId: number\r\n    lookingForAJob: boolean\r\n    lookingForAJobDescription: string\r\n    fullName: string\r\n    contacts: UserProfileContactsType\r\n    photos: UserProfilePhotosType\r\n}\r\nexport type PostType = {\r\n    id: number\r\n    text: string\r\n    likesCount: number\r\n}\r\nexport type ProfilePageType = {\r\n    posts: Array<PostType>\r\n    userProfile: UserProfileType | null\r\n    status: string\r\n}\r\ntype ActionsTypes = ReturnType<typeof addPost>\r\n    | ReturnType<typeof setUserProfile>\r\n    | ReturnType<typeof setStatus>\r\n    | ReturnType<typeof deletePost>\r\n\r\nlet initialState: ProfilePageType = {\r\n    posts: [\r\n        {id: 1, text: 'Hi, how old are you?', likesCount: 10},\r\n        {id: 2, text: 'It\\'s my first post', likesCount: 15},\r\n        {id: 3, text: 'How is your it-kamasutra?', likesCount: 20}\r\n    ],\r\n    userProfile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action: ActionsTypes): ProfilePageType => {\r\n    switch (action.type) {\r\n        case ADD_NEW_POST:\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, {id: 5, text: action.postText, likesCount: 0}]\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                userProfile: action.userProfile\r\n            }\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addPost = (postText: string) => {\r\n    return {\r\n        type: ADD_NEW_POST,\r\n        postText\r\n    } as const\r\n}\r\nexport const deletePost = (postId: number) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        postId\r\n    } as const\r\n}\r\nexport const setUserProfile = (userProfile: UserProfileType) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        userProfile\r\n    } as const\r\n}\r\nexport const setStatus = (status: string) => {\r\n    return {\r\n        type: SET_STATUS,\r\n        status\r\n    } as const\r\n}\r\n\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch) => {\r\n    let data = await usersAPI.getProfile(Number(userId))\r\n    dispatch(setUserProfile(data))\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch) => {\r\n    let data = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let data = await profileAPI.updateStatus(status)\r\n    if (data.resultCode === 0) {\r\n        dispatch(setStatus(status))\r\n    }\r\n}\r\n\r\nexport default profileReducer","export const updateObjectInArray = <A, I, N>(items: Array<A>, itemId: I, objPropName: string, newObjProps: N): Array<A> => {\r\n\r\n    return items.map((u:any) => {\r\n        if (u[objPropName] === itemId){\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u\r\n    })\r\n}","import {Dispatch} from \"redux\";\r\nimport {FollowResponseType, usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/objec-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW'\r\nconst UNFOLLOW = 'UNFOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst SET_FETCHING = 'SET-FETCHING'\r\nconst SET_FOLLOWING_IN_PROGRESS = 'SET-FOLLOWING-IN-PROGRESS'\r\n\r\n\r\nexport type PhotosType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type LocationType = {\r\n    country: string\r\n    city: string\r\n}\r\nexport type UserType = {\r\n    id: number\r\n    photos: PhotosType\r\n    followed: boolean\r\n    name: string\r\n    status: string\r\n    location: LocationType\r\n}\r\nexport type UsersType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingInProgress: number[]\r\n}\r\ntype ActionsTypes =\r\n    ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n    | ReturnType<typeof setUsers>\r\n    | ReturnType<typeof setCurrentPage>\r\n    | ReturnType<typeof setTotalUsersCount>\r\n    | ReturnType<typeof setFetching>\r\n    | ReturnType<typeof setFollowingInProgress>\r\n\r\ntype FollowUnfollowActionType = ReturnType<typeof followSuccess>\r\n    | ReturnType<typeof unfollowSuccess>\r\n\r\nlet initialState: UsersType = {\r\n    users: [],\r\n    pageSize: 15,\r\n    totalUsersCount: 0,\r\n    currentPage: 8,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n}\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): UsersType => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                //users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                //users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\r\n            }\r\n        case SET_USERS:\r\n            if (action.getFriends)\r\n                return {...state, users: [...action.users.filter(u => u.followed)]}\r\n                return {...state, users: [...action.users]}\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage}\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {...state, totalUsersCount: action.totalUsersCount}\r\n        case SET_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        case SET_FOLLOWING_IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(u => u !== action.userId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId: number) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport const unfollowSuccess = (userId: number) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId\r\n    } as const\r\n}\r\nexport const setUsers = (users: Array<UserType>, getFriends?: boolean) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users,\r\n        getFriends\r\n    } as const\r\n}\r\nexport const setCurrentPage = (currentPage: number) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage\r\n    } as const\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        totalUsersCount\r\n    } as const\r\n}\r\nexport const setFetching = (isFetching: boolean) => {\r\n    return {\r\n        type: SET_FETCHING,\r\n        isFetching\r\n    } as const\r\n}\r\nexport const setFollowingInProgress = (isFetching: boolean, userId: number) => {\r\n    return {\r\n        type: SET_FOLLOWING_IN_PROGRESS,\r\n        isFetching,\r\n        userId\r\n    } as const\r\n}\r\n\r\nexport const requestUsers = (page: number, pageSize: number, getFriends?: boolean) => async (dispatch: Dispatch) => {\r\n    dispatch(setFetching(true))\r\n    dispatch(setCurrentPage(page))\r\n    let data = await usersAPI.getUsers(page, pageSize)\r\n    dispatch(setFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n}\r\n\r\nexport const followUnfollowFlow = async (\r\n    dispatch: Dispatch,\r\n    userId: number,\r\n    apiMethod: (userId: number) => Promise<FollowResponseType>,\r\n    actionCreator: (userId: number) => FollowUnfollowActionType) => {\r\n\r\n    dispatch(setFollowingInProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(setFollowingInProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId: number) => async (dispatch: Dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n}\r\nexport const unfollow = (userId: number) => async (dispatch: Dispatch) => {\r\n    await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n}\r\n\r\nexport default usersReducer","import * as axios from \"axios\";\r\nimport {UserType} from \"../redux/users-reducer\";\r\nimport {UserProfileType} from \"../redux/profile-reducer\";\r\n\r\n\r\ntype GetUsersResponseType = {\r\n    items: UserType[]\r\n    totalCount: number\r\n    error: string | null\r\n}\r\nexport type FollowResponseType = {\r\n    resultCode: number\r\n    messages: Array<string>\r\n    data: object\r\n}\r\ntype UpdateStatusResponseType = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: object\r\n}\r\ntype AuthorizeLoginResponseType = {\r\n    resultCode: number\r\n    messages: string[]\r\n    data: object\r\n}\r\n\r\n\r\ntype ProfileResponseType = UserProfileType\r\n\r\nconst instance = axios.default.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"8c6b7133-ade3-4a94-80d1-5d19fef414f3\"\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number = 1, pageSize: number = 20) {\r\n        return instance.get<GetUsersResponseType>(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollow(userId: number) {\r\n        return instance.delete<FollowResponseType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId: number) {\r\n        return instance.post<FollowResponseType>(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getProfile(userId: number) {\r\n        console.warn('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get<ProfileResponseType>(`profile/${userId}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => {\r\n            return response.data\r\n        })\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put<UpdateStatusResponseType>(`profile/status/`, {status})\r\n            .then(response => {\r\n            return response.data\r\n        })\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha?: boolean) {\r\n        return instance.post<AuthorizeLoginResponseType>(`auth/login`, {email, password, rememberMe, captcha})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete<AuthorizeLoginResponseType>(`auth/login`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE'\r\n\r\nexport const addMessageAC = (message: string) => {\r\n    return {\r\n        type: ADD_NEW_MESSAGE,\r\n        message\r\n    } as const\r\n}\r\n\r\n\r\nexport type IMessageType = {\r\n    id: number\r\n    text: string\r\n}\r\nexport type IDialogType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type IDialogPageType = {\r\n    dialogs: Array<IDialogType>\r\n    messages: Array<IMessageType>\r\n}\r\ntype ActionsTypes = ReturnType<typeof addMessageAC>\r\n\r\nlet initialState: IDialogPageType = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Yura'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'}\r\n    ],\r\n    messages: [\r\n        {id: 1, text: 'Hi'},\r\n        {id: 2, text: 'How are you?'},\r\n        {id: 3, text: 'How is your it-kamasutra?'}\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action: ActionsTypes): IDialogPageType => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, text: action.message}],\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogReducer"],"sourceRoot":""}